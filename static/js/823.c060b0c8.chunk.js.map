{"version":3,"file":"static/js/823.c060b0c8.chunk.js","mappings":"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","sources":["components/Radio/Radio.js","module/Category/CategoryUpdate.js"],"sourcesContent":["import React from \"react\";\r\nimport { useController } from \"react-hook-form\";\r\n\r\nconst Radio = ({ checked, children, control, name, ...props }) => {\r\n  const { field } = useController({\r\n    control,\r\n    name,\r\n    defaultValue: \"\",\r\n  });\r\n  return (\r\n    <label>\r\n      <input\r\n        checked={checked}\r\n        type=\"radio\"\r\n        className=\"hidden-input\"\r\n        {...field}\r\n        {...props}\r\n      />\r\n      <div className=\"flex items-center font-medium cursor-pointer gap-x-3\">\r\n        <div\r\n          className={`w-7 h-7 rounded-full border flex items-center justify-center p-1  ${\r\n            checked\r\n              ? \"bg-primary border-primary text-white\"\r\n              : \"border-gray-300 border-2 text-transparent\"\r\n          }`}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"w-6 h-6\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M5 13l4 4L19 7\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <span>{children}</span>\r\n      </div>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Radio;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Button } from \"components/Button\";\r\nimport { Field, FieldCheckbox } from \"components/Field\";\r\nimport { Input } from \"components/Input\";\r\nimport { Label } from \"components/Label\";\r\nimport { Radio } from \"components/Radio\";\r\nimport { db } from \"firebase-app/firebase-config\";\r\nimport { doc, getDoc, updateDoc } from \"firebase/firestore\";\r\nimport { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { categoryUpdateSchema } from \"schema/schema\";\r\nimport slugify from \"slugify\";\r\nimport { categoryStatus } from \"utils/constants\";\r\nimport DashboardHeading from \"./DashboardHeading\";\r\n\r\nconst CategoryUpdate = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n  const {\r\n    control,\r\n    reset,\r\n    watch,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting },\r\n  } = useForm({\r\n    mode: \"onSubmit\",\r\n    resolver: yupResolver(categoryUpdateSchema),\r\n  });\r\n  const categoryId = searchParams.get(\"id\");\r\n  const categoryName = searchParams.get(\"name\");\r\n  useEffect(() => {\r\n    const arrErrors = Object.values(errors);\r\n    if (arrErrors.length > 0) {\r\n      toast.dismiss(arrErrors.find((item) => item === 0));\r\n      toast.error(arrErrors[0]?.message, {\r\n        pauseOnHover: true,\r\n        closeOnClick: true,\r\n      });\r\n    }\r\n  }, [errors]);\r\n  useEffect(() => {\r\n    async function getCurrentCategoryValue() {\r\n      const docRef = doc(db, \"categories\", categoryId);\r\n      await getDoc(docRef).then((doc) => {\r\n        reset(doc.data());\r\n      });\r\n    }\r\n    getCurrentCategoryValue();\r\n  }, [categoryId, reset]);\r\n  const watchStatus = Number(watch(\"status\"));\r\n  const handleUpdateCategory = async (values) => {\r\n    const cloneValues = { ...values };\r\n    const docRef = doc(db, \"categories\", categoryId);\r\n    await updateDoc(docRef, {\r\n      name: cloneValues.name,\r\n      slug: slugify(cloneValues.name, { lower: true }),\r\n      status: Number(cloneValues.status),\r\n    });\r\n    toast.success(\"Update category successfully\", {\r\n      closeOnClick: true,\r\n    });\r\n    navigate(\"/manage/category\");\r\n  };\r\n  if (!categoryId) return null;\r\n  return (\r\n    <div>\r\n      <DashboardHeading\r\n        title={`Things always need to be updated huh?\r\n        `}\r\n        desc={`Updating category: ${categoryName}`}\r\n      ></DashboardHeading>\r\n      <form onSubmit={handleSubmit(handleUpdateCategory)} autoComplete=\"off\">\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Name</Label>\r\n            <Input\r\n              control={control}\r\n              name=\"name\"\r\n              placeholder=\"Enter your category name\"\r\n            ></Input>\r\n          </Field>\r\n        </div>\r\n        <div className=\"form-layout\">\r\n          <FieldCheckbox className=\"my-5\">\r\n            <Label>Status:</Label>\r\n            <FieldCheckbox>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={watchStatus === categoryStatus.APPROVED}\r\n                value={categoryStatus.APPROVED}\r\n              >\r\n                Approved\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={watchStatus === categoryStatus.PENDING}\r\n                value={categoryStatus.PENDING}\r\n              >\r\n                Pending\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={watchStatus === categoryStatus.REJECTED}\r\n                value={categoryStatus.REJECTED}\r\n              >\r\n                Reject\r\n              </Radio>\r\n            </FieldCheckbox>\r\n          </FieldCheckbox>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          kind=\"primary\"\r\n          isLoading={isSubmitting}\r\n          disabled={isSubmitting}\r\n        >\r\n          {`Update ${categoryName} Category`}\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryUpdate;\r\n"],"names":["checked","children","control","name","props","field","useController","defaultValue","type","className","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","useSearchParams","searchParams","navigate","useNavigate","useForm","mode","resolver","yupResolver","categoryUpdateSchema","reset","watch","handleSubmit","formState","errors","isSubmitting","categoryId","get","categoryName","useEffect","arrErrors","Object","values","length","toast","find","item","message","pauseOnHover","closeOnClick","docRef","doc","db","getDoc","then","data","getCurrentCategoryValue","watchStatus","Number","handleUpdateCategory","cloneValues","updateDoc","slug","slugify","lower","status","title","desc","onSubmit","autoComplete","I","placeholder","categoryStatus","value","kind","isLoading","disabled"],"sourceRoot":""}