{"version":3,"file":"static/js/860.d529aa6f.chunk.js","mappings":"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","sources":["components/Radio/Radio.js","module/Category/CategoryAddNew.js"],"sourcesContent":["import React from \"react\";\r\nimport { useController } from \"react-hook-form\";\r\n\r\nconst Radio = ({ checked, children, control, name, ...props }) => {\r\n  const { field } = useController({\r\n    control,\r\n    name,\r\n    defaultValue: \"\",\r\n  });\r\n  return (\r\n    <label>\r\n      <input\r\n        checked={checked}\r\n        type=\"radio\"\r\n        className=\"hidden-input\"\r\n        {...field}\r\n        {...props}\r\n      />\r\n      <div className=\"flex items-center font-medium cursor-pointer gap-x-3\">\r\n        <div\r\n          className={`w-7 h-7 rounded-full border flex items-center justify-center p-1  ${\r\n            checked\r\n              ? \"bg-primary border-primary text-white\"\r\n              : \"border-gray-300 border-2 text-transparent\"\r\n          }`}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"w-6 h-6\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M5 13l4 4L19 7\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <span>{children}</span>\r\n      </div>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Radio;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Button } from \"components/Button\";\r\nimport { Field, FieldCheckbox } from \"components/Field\";\r\nimport { Input } from \"components/Input\";\r\nimport { Label } from \"components/Label\";\r\nimport { Radio } from \"components/Radio\";\r\nimport { useAuth } from \"contexts/auth-context\";\r\nimport { db } from \"firebase-app/firebase-config\";\r\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\r\nimport { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { categoryAddNewSchema } from \"schema/schema\";\r\nimport slugify from \"slugify\";\r\nimport { categoryStatus, userRole } from \"utils/constants\";\r\nimport DashboardHeading from \"./DashboardHeading\";\r\n\r\nconst CategoryAddNew = () => {\r\n  const { userInfo } = useAuth();\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    watch,\r\n    reset,\r\n    formState: { errors, isSubmitting },\r\n  } = useForm({\r\n    mode: \"onSubmit\",\r\n    defaultValues: {\r\n      name: \"\",\r\n      slug: \"\",\r\n      status: 1,\r\n      createdAt: new Date(),\r\n    },\r\n    resolver: yupResolver(categoryAddNewSchema),\r\n  });\r\n  const watchStatus = Number(watch(\"status\"));\r\n  useEffect(() => {\r\n    const arrErrors = Object.values(errors);\r\n    if (arrErrors.length > 0) {\r\n      toast.dismiss(arrErrors.find((item) => item === 0));\r\n      toast.error(arrErrors[0]?.message, {\r\n        pauseOnHover: true,\r\n        closeOnClick: true,\r\n      });\r\n    }\r\n  }, [errors]);\r\n  const handleAddCategory = async (values) => {\r\n    const cloneValues = { ...values };\r\n    cloneValues.slug = slugify(cloneValues.name, {\r\n      lower: true,\r\n    });\r\n    const colRef = collection(db, \"categories\");\r\n    try {\r\n      await addDoc(colRef, {\r\n        ...cloneValues,\r\n        createdAt: serverTimestamp(),\r\n      });\r\n      toast.success(\"Created new category successfully\");\r\n    } catch (err) {\r\n      toast.error(err.message);\r\n    } finally {\r\n      reset({\r\n        name: \"\",\r\n        slug: \"\",\r\n        status: 1,\r\n        createdAt: new Date(),\r\n      });\r\n    }\r\n  };\r\n  if (userInfo?.role !== userRole.ADMIN && userInfo?.role !== userRole.MOD)\r\n    return null;\r\n  return (\r\n    <div>\r\n      <DashboardHeading\r\n        title=\"New category\"\r\n        desc=\"Add new category\"\r\n      ></DashboardHeading>\r\n      <form onSubmit={handleSubmit(handleAddCategory)} autoComplete=\"off\">\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Name</Label>\r\n            <Input\r\n              control={control}\r\n              name=\"name\"\r\n              placeholder=\"Enter your category name\"\r\n            ></Input>\r\n          </Field>\r\n        </div>\r\n        <div className=\"form-layout\">\r\n          <FieldCheckbox className=\"my-5\">\r\n            <Label>Status:</Label>\r\n            <FieldCheckbox>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={watchStatus === categoryStatus.APPROVED}\r\n                value={categoryStatus.APPROVED}\r\n              >\r\n                Approved\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={watchStatus === categoryStatus.PENDING}\r\n                value={categoryStatus.PENDING}\r\n              >\r\n                Pending\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={watchStatus === categoryStatus.REJECTED}\r\n                value={categoryStatus.REJECTED}\r\n              >\r\n                Reject\r\n              </Radio>\r\n            </FieldCheckbox>\r\n          </FieldCheckbox>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          kind=\"primary\"\r\n          className=\"mx-auto\"\r\n          isLoading={isSubmitting}\r\n          disabled={isSubmitting}\r\n        >\r\n          Add new category\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryAddNew;\r\n"],"names":["checked","children","control","name","props","field","useController","defaultValue","type","className","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","userInfo","useAuth","useForm","mode","defaultValues","slug","status","createdAt","Date","resolver","yupResolver","categoryAddNewSchema","handleSubmit","watch","reset","formState","errors","isSubmitting","watchStatus","Number","useEffect","arrErrors","Object","values","length","toast","find","item","message","pauseOnHover","closeOnClick","handleAddCategory","cloneValues","slugify","lower","colRef","collection","db","addDoc","serverTimestamp","role","userRole","title","desc","onSubmit","autoComplete","I","placeholder","categoryStatus","value","kind","isLoading","disabled"],"sourceRoot":""}