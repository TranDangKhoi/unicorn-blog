{"version":3,"file":"static/js/473.b25b6b32.chunk.js","mappings":"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","sources":["components/Author/AuthorBox.js","module/Post/PostRelated.js","pages/PostDetailsPage.js"],"sourcesContent":["import { db } from \"firebase-app/firebase-config\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthorBox = ({ userId }) => {\r\n  const [userInfo, setUserInfo] = useState({});\r\n  useEffect(() => {\r\n    async function getAuthorInfos() {\r\n      const docRef = doc(db, \"users\", userId);\r\n    const docData = await getDoc(docRef);\r\n      setUserInfo(docData.data());\r\n    }\r\n    getAuthorInfos();\r\n  }, [userId]);\r\n  return (\r\n    <div className=\"author\">\r\n      <div className=\"author-image\">\r\n        <img src={userInfo?.avatar} alt=\"\" />\r\n      </div>\r\n      <div className=\"author-content\">\r\n        <h3 className=\"author-name\">{userInfo?.username}</h3>\r\n        <p className=\"author-desc line-clamp-5\">{userInfo?.bio}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthorBox;\r\n","import { Heading } from \"components/Layout\";\r\nimport { db } from \"firebase-app/firebase-config\";\r\nimport {\r\n  collection,\r\n  limit,\r\n  onSnapshot,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport PostItem from \"./PostItem\";\r\n\r\nconst PostRelated = ({ postId, categoryId }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  useEffect(() => {\r\n    const docRef = query(\r\n      collection(db, \"posts\"),\r\n      where(\"categoryId\", \"==\", categoryId),\r\n      limit(4)\r\n    );\r\n    onSnapshot(docRef, (snapshot) => {\r\n      const results = [];\r\n      snapshot.docs.forEach((doc) => {\r\n        results.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      setPosts(results);\r\n    });\r\n  }, [categoryId]);\r\n  if (!categoryId || posts.length <= 0) return null;\r\n  return (\r\n    <div className=\"mb-10 post-related\">\r\n      <Heading>Related articles</Heading>\r\n      <div className=\"grid-layout grid-layout--primary\">\r\n        {posts.map((post) => (\r\n          <PostItem key={post.id} post={post}></PostItem>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostRelated;\r\n","import { Layout } from \"components/Layout\";\r\nimport { db } from \"firebase-app/firebase-config\";\r\nimport parse from \"html-react-parser\";\r\nimport { collection, onSnapshot, query, where } from \"firebase/firestore\";\r\nimport PostCategory from \"module/Post/PostCategory\";\r\nimport PostImage from \"module/Post/PostImage\";\r\nimport PostMeta from \"module/Post/PostMeta\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport NotFoundPage from \"./NotFoundPage\";\r\nimport useFormattedDisplay from \"hooks/useFormattedDisplay\";\r\nimport { AuthorBox } from \"components/Author\";\r\nimport PostRelated from \"module/Post/PostRelated\";\r\nconst PostDetailsPageStyles = styled.div`\r\n  .post {\r\n    &-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      gap: 40px;\r\n      margin: 40px 0;\r\n    }\r\n    &-feature {\r\n      width: 100%;\r\n      max-width: 640px;\r\n      height: 466px;\r\n      border-radius: 20px;\r\n    }\r\n    &-heading {\r\n      font-weight: bold;\r\n      font-size: 36px;\r\n      margin-bottom: 16px;\r\n    }\r\n    &-info {\r\n      flex: 1;\r\n    }\r\n    &-content {\r\n      max-width: 700px;\r\n      margin: 80px auto;\r\n    }\r\n  }\r\n  .author {\r\n    margin-top: 40px;\r\n    margin-bottom: 80px;\r\n    display: flex;\r\n    border-radius: 20px;\r\n    &-image {\r\n      width: 200px;\r\n      height: 200px;\r\n      flex-shrink: 0;\r\n      border-radius: inherit;\r\n    }\r\n    &-image img {\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n      border-radius: inherit;\r\n    }\r\n    &-content {\r\n      flex: 1;\r\n      padding: 20px;\r\n    }\r\n    &-name {\r\n      font-weight: bold;\r\n      margin-bottom: 10px;\r\n      font-size: 20px;\r\n    }\r\n    &-desc {\r\n      font-size: 14px;\r\n      line-height: 2;\r\n    }\r\n  }\r\n  @media screen and (max-width: 1023.98px) {\r\n    padding-bottom: 40px;\r\n    .post {\r\n      &-header {\r\n        flex-direction: column;\r\n      }\r\n      &-feature {\r\n        height: auto;\r\n      }\r\n      &-heading {\r\n        font-size: 26px;\r\n      }\r\n      &-content {\r\n        margin: 40px 0;\r\n      }\r\n    }\r\n    .author {\r\n      flex-direction: column;\r\n      &-image {\r\n        width: 100%;\r\n        height: auto;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostDetailsPage = () => {\r\n  const { slug } = useParams();\r\n  const [postInfo, setPostInfo] = useState({});\r\n  const { displayLocaleDateBySeconds } = useFormattedDisplay();\r\n  useEffect(() => {\r\n    async function getPostContent() {\r\n      if (!slug) return;\r\n      const colRef = query(collection(db, \"posts\"), where(\"slug\", \"==\", slug));\r\n      onSnapshot(colRef, (snapshot) => {\r\n        snapshot.docs.forEach((doc) => {\r\n          doc.data() && setPostInfo(doc.data());\r\n        });\r\n      });\r\n    }\r\n    getPostContent();\r\n  }, [postInfo.content, slug]);\r\n  useEffect(() => {\r\n    document.body.scrollIntoView({ block: \"start\" });\r\n  }, [slug]);\r\n  if (!slug) return <NotFoundPage></NotFoundPage>;\r\n  if (!postInfo?.title) return null;\r\n  return (\r\n    <PostDetailsPageStyles>\r\n      <Layout>\r\n        <div className=\"container\">\r\n          <div className=\"post-header\">\r\n            <PostImage\r\n              src={postInfo.imageURL}\r\n              className=\"post-feature\"\r\n            ></PostImage>\r\n            <div className=\"post-info\">\r\n              <PostCategory className=\"mb-6\" to={postInfo.category?.slug}>\r\n                {postInfo.category.name}\r\n              </PostCategory>\r\n              <h1 className=\"post-heading\">{postInfo.title}</h1>\r\n              <PostMeta\r\n                date={displayLocaleDateBySeconds(postInfo.createdAt.seconds)}\r\n                username={postInfo.user.username}\r\n              ></PostMeta>\r\n            </div>\r\n          </div>\r\n          <div className=\"post-content\">\r\n            <div className=\"entry-content\">{parse(postInfo.content)}</div>\r\n            <AuthorBox userId={postInfo.user.userId}></AuthorBox>\r\n          </div>\r\n          <PostRelated categoryId={postInfo?.categoryId}></PostRelated>\r\n        </div>\r\n      </Layout>\r\n    </PostDetailsPageStyles>\r\n  );\r\n};\r\n\r\nexport default PostDetailsPage;\r\n"],"names":["userId","useState","userInfo","setUserInfo","useEffect","docRef","doc","db","getDoc","docData","data","getAuthorInfos","className","src","avatar","alt","username","bio","postId","categoryId","posts","setPosts","query","collection","where","limit","onSnapshot","snapshot","results","docs","forEach","push","id","length","map","post","PostItem","PostDetailsPageStyles","styled","slug","useParams","postInfo","setPostInfo","displayLocaleDateBySeconds","useFormattedDisplay","colRef","getPostContent","content","document","body","scrollIntoView","block","title","Layout","PostImage","imageURL","PostCategory","to","category","name","PostMeta","date","createdAt","seconds","user","parse","NotFoundPage"],"sourceRoot":""}