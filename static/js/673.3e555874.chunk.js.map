{"version":3,"file":"static/js/673.3e555874.chunk.js","mappings":"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","sources":["api-config.js","contexts/dropdown-context.js","components/Dropdown/Dropdown.js","components/Dropdown/Option.js","components/Dropdown/Search.js","components/Dropdown/Select.js","components/Dropdown/List.js","components/Dropdown/index.js","components/Radio/Radio.js","components/Toggle/Toggle.js","hooks/useFirebaseImage.js","module/Post/PostUpdate.js"],"sourcesContent":["export const imgbbAPI =\r\n  \"https://api.imgbb.com/1/upload?key=3c83bf0d94037028b0b4041a18bcb093\";\r\n","import { createContext, useContext, useState } from \"react\";\r\n\r\nconst DropdownContext = createContext();\r\nfunction DropdownProvider(props) {\r\n  const [show, setShow] = useState(false);\r\n  const handleToggleDropdown = () => {\r\n    setShow(!show);\r\n  };\r\n  const value = {\r\n    show,\r\n    setShow,\r\n    handleToggleDropdown,\r\n  };\r\n  return (\r\n    <DropdownContext.Provider value={value} {...props}>\r\n      {props.children}\r\n    </DropdownContext.Provider>\r\n  );\r\n}\r\nfunction useDropdown() {\r\n  const context = useContext(DropdownContext);\r\n  if (typeof context === \"undefined\")\r\n    throw new Error(\"useDropdown must be used within DropdownProvider\");\r\n  return context;\r\n}\r\nexport { useDropdown, DropdownProvider };\r\n","import { DropdownProvider } from \"contexts/dropdown-context\";\r\nimport React from \"react\";\r\n\r\nconst Dropdown = ({ children, ...props }) => {\r\n  return (\r\n    <DropdownProvider {...props}>\r\n      <div className=\"relative inline-block w-full\">{children}</div>\r\n    </DropdownProvider>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import { useDropdown } from \"contexts/dropdown-context\";\r\nimport React from \"react\";\r\n\r\nconst Option = (props) => {\r\n  const { onClick } = props;\r\n  const { setShow } = useDropdown();\r\n  const handleClick = () => {\r\n    onClick && onClick();\r\n    setShow(false);\r\n  };\r\n  return (\r\n    <div\r\n      className=\"py-[15px] px-[25px] transition-all border-l-4 border-l-transparent cursor-pointer flex items-center justify-between hover:text-primary hover:border-l-primary\"\r\n      onClick={handleClick}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Option;\r\n","import { useDropdown } from \"contexts/dropdown-context\";\r\nimport React from \"react\";\r\n\r\nconst Search = ({ placeholder, ...props }) => {\r\n  const { onChange } = useDropdown();\r\n  return (\r\n    <div className=\"p-2\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder={placeholder}\r\n        className=\"w-full p-4 border border-gray-200 rounded outline-none\"\r\n        onChange={onChange}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { IconArrowDown, IconArrowUp } from \"components/Icon\";\r\nimport { useDropdown } from \"contexts/dropdown-context\";\r\nimport React from \"react\";\r\n\r\nconst Select = ({\r\n  placeholder = \"Please select an category\",\r\n  className = \"\",\r\n}) => {\r\n  const { show, handleToggleDropdown } = useDropdown();\r\n  return (\r\n    <div\r\n      className={`${className} py-[15px] rounded-lg border border-gray-200 px-[25px] cursor-pointer flex items-center justify-between`}\r\n      onClick={handleToggleDropdown}\r\n    >\r\n      <span>{placeholder}</span>\r\n      <span>\r\n        {show ? <IconArrowUp></IconArrowUp> : <IconArrowDown></IconArrowDown>}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import { useDropdown } from \"contexts/dropdown-context\";\r\nimport React from \"react\";\r\n\r\nconst List = ({ children }) => {\r\n  const { show } = useDropdown();\r\n  return (\r\n    <>\r\n      {show && (\r\n        <div className=\"absolute left-0 z-20 w-full bg-white border border-gray-200 shadow-sm border-t-transparent top-full\">\r\n          {children}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import Dropdown from \"./Dropdown\";\r\nimport Option from \"./Option\";\r\nimport Search from \"./Search\";\r\nimport Select from \"./Select\";\r\nimport List from \"./List\";\r\n\r\nDropdown.Option = Option;\r\nDropdown.Search = Search;\r\nDropdown.Select = Select;\r\nDropdown.List = List;\r\n\r\nexport { Dropdown };\r\n","import React from \"react\";\r\nimport { useController } from \"react-hook-form\";\r\n\r\nconst Radio = ({ checked, children, control, name, ...props }) => {\r\n  const { field } = useController({\r\n    control,\r\n    name,\r\n    defaultValue: \"\",\r\n  });\r\n  return (\r\n    <label>\r\n      <input\r\n        checked={checked}\r\n        type=\"radio\"\r\n        className=\"hidden-input\"\r\n        {...field}\r\n        {...props}\r\n      />\r\n      <div className=\"flex items-center font-medium cursor-pointer gap-x-3\">\r\n        <div\r\n          className={`w-7 h-7 rounded-full border flex items-center justify-center p-1  ${\r\n            checked\r\n              ? \"bg-primary border-primary text-white\"\r\n              : \"border-gray-300 border-2 text-transparent\"\r\n          }`}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"w-6 h-6\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M5 13l4 4L19 7\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <span>{children}</span>\r\n      </div>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Radio;\r\n","import React from \"react\";\r\n\r\nconst Toggle = ({ name, on, onClick, ...rest }) => {\r\n  return (\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        name={name}\r\n        id={name}\r\n        checked={on}\r\n        onClick={onClick}\r\n        className=\"hidden-input\"\r\n        onChange={() => {}}\r\n      />\r\n      <div\r\n        className={`inline-block w-[100px] h-[52px] relative cursor-pointer rounded-full p-1 transition-all ${\r\n          on ? \"bg-primary\" : \"bg-gray-300\"\r\n        }`}\r\n        {...rest}\r\n      >\r\n        <span\r\n          className={`transition-all w-11 h-11 bg-white rounded-full inline-block ${\r\n            on ? \"translate-x-[48px]\" : \"\"\r\n          }`}\r\n        ></span>\r\n      </div>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Toggle;\r\n","import { auth } from \"firebase-app/firebase-config\";\r\nimport { updateProfile } from \"firebase/auth\";\r\nimport {\r\n  deleteObject,\r\n  getDownloadURL,\r\n  getStorage,\r\n  ref,\r\n  uploadBytesResumable,\r\n} from \"firebase/storage\";\r\nimport { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function useFirebaseImage(\r\n  setValue,\r\n  getValues,\r\n  imageName = null\r\n) {\r\n  const [progress, setProgress] = useState(0);\r\n  const [imageURL, setImageURL] = useState(\"\");\r\n\r\n  if (!setValue || !getValues) return;\r\n  const handleUploadImage = (file) => {\r\n    if (!file || !file.type.includes(\"image/\")) {\r\n      toast.error(\"You can only upload image files\", {\r\n        autoClose: 4000,\r\n        pauseOnHover: true,\r\n      });\r\n      console.log(file);\r\n      return;\r\n    }\r\n    const storage = getStorage();\r\n    const storageRef = ref(storage, \"images/\" + file.name);\r\n    const uploadTask = uploadBytesResumable(storageRef, file);\r\n    // Listen for state changes, errors, and completion of the upload.\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n        const progressPercent =\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        setProgress(progressPercent);\r\n        switch (snapshot.state) {\r\n          case \"paused\":\r\n            toast.info(\"Upload is paused\");\r\n            break;\r\n          case \"running\":\r\n            console.log(\"Upload is running\");\r\n            break;\r\n          default:\r\n            console.log(\"Nothing at all\");\r\n            break;\r\n        }\r\n      },\r\n      (error) => {\r\n        // A full list of error codes is available at\r\n        // https://firebase.google.com/docs/storage/web/handle-errors\r\n        switch (error.code) {\r\n          case \"storage/unauthorized\":\r\n            toast.error(\"You must login to use this feature\", {\r\n              hideProgressBar: true,\r\n            });\r\n            break;\r\n          case \"storage/canceled\":\r\n            // User canceled the upload\r\n            toast.info(\"You have just cancelled the upload progress!\");\r\n            break;\r\n\r\n          case \"storage/unknown\":\r\n            toast.error(\"Unknown error occurred, inspect error.serverResponse\");\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      },\r\n      () => {\r\n        // Upload completed successfully, now we can get the download URL\r\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n          console.log(\"File available at\", downloadURL);\r\n          setImageURL(downloadURL);\r\n        });\r\n      }\r\n    );\r\n  };\r\n  const handleSelectImage = (e) => {\r\n    const file = e.target.files[0];\r\n    setValue(\"image_name\", file.name);\r\n    handleUploadImage(file);\r\n  };\r\n  const handleResetUploadAfterSubmit = () => {\r\n    setImageURL(\"\");\r\n    setProgress(0);\r\n  };\r\n  const handleRemoveImage = () => {\r\n    const storage = getStorage();\r\n\r\n    // Create a reference to the file to delete\r\n    const imageRef = ref(\r\n      storage,\r\n      \"images/\" + (imageName || getValues(\"image_name\"))\r\n    );\r\n    // Delete the file\r\n    deleteObject(imageRef)\r\n      .then(() => {\r\n        console.log(\"Uploaded image removed successfully!\");\r\n        handleResetUploadAfterSubmit();\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Failed to remove image\");\r\n      });\r\n  };\r\n  const handleRemoveAvatar = () => {\r\n    const storage = getStorage();\r\n\r\n    // Create a reference to the file to delete\r\n    const imageRef = ref(storage, \"images/\" + getValues(\"image_name\"));\r\n    // Delete the file\r\n    deleteObject(imageRef)\r\n      .then(async () => {\r\n        console.log(\"Uploaded image removed successfully!\");\r\n        await updateProfile(auth.currentUser, {\r\n          photoURL: `https://ui-avatars.com/api/?background=random&name=${auth.currentUser.displayName}`,\r\n        });\r\n        handleResetUploadAfterSubmit();\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Failed to remove image\");\r\n      });\r\n  };\r\n  return {\r\n    imageURL,\r\n    progress,\r\n    setImageURL,\r\n    setProgress,\r\n    handleRemoveImage,\r\n    handleRemoveAvatar,\r\n    handleSelectImage,\r\n    handleUploadImage,\r\n  };\r\n}\r\n","import {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  query,\r\n  updateDoc,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport ReactQuill, { Quill } from \"react-quill\";\r\nimport ImageUploader from \"quill-image-uploader\";\r\n\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nimport { Button } from \"components/Button\";\r\nimport { Dropdown } from \"components/Dropdown\";\r\nimport { Field, FieldCheckbox } from \"components/Field\";\r\nimport { Input } from \"components/Input\";\r\nimport { Label } from \"components/Label\";\r\nimport { Radio } from \"components/Radio\";\r\nimport { Toggle } from \"components/Toggle\";\r\nimport { ImageUpload } from \"components/Upload\";\r\nimport { db } from \"firebase-app/firebase-config\";\r\nimport useFirebaseImage from \"hooks/useFirebaseImage\";\r\nimport DashboardHeading from \"module/Category/DashboardHeading\";\r\nimport { postStatus } from \"utils/constants\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useMemo } from \"react\";\r\nimport { imgbbAPI } from \"api-config\";\r\nimport axios from \"axios\";\r\nQuill.register(\"modules/imageUploader\", ImageUploader);\r\n\r\nconst PostUpdate = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const postId = searchParams.get(\"id\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectCategory, setSelectCategory] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    watch,\r\n    reset,\r\n    setValue,\r\n    getValues,\r\n    formState: { isSubmitting, isValid, errors },\r\n  } = useForm({\r\n    mode: \"onSubmit\",\r\n  });\r\n  const watchStatus = Number(watch(\"status\"));\r\n  const watchPopular = watch(\"popular\");\r\n  const thumbnailImageURL = getValues(\"imageURL\");\r\n  const thumbnailImageName = getValues(\"image_name\");\r\n  const {\r\n    handleRemoveImage,\r\n    setImageURL,\r\n    imageURL,\r\n    handleSelectImage,\r\n    progress,\r\n  } = useFirebaseImage(\r\n    setValue,\r\n    getValues,\r\n    thumbnailImageName,\r\n    deleteThumbnail\r\n  );\r\n\r\n  useEffect(() => {\r\n    async function getPost() {\r\n      if (!postId) return;\r\n      const docRef = doc(db, \"posts\", postId);\r\n      const docSnapshot = await getDoc(docRef);\r\n      if (docSnapshot.data()) {\r\n        reset(docSnapshot.data());\r\n        setSelectCategory(docSnapshot.data()?.category || \"\");\r\n        setContent(docSnapshot.data()?.content || \"\");\r\n      }\r\n    }\r\n    getPost();\r\n  }, [postId, reset]);\r\n  useEffect(() => {\r\n    async function getCategories() {\r\n      const colRef = collection(db, \"categories\");\r\n      const q = query(colRef, where(\"status\", \"==\", 1));\r\n      const docs = await getDocs(q);\r\n      let yourCategories = [];\r\n      docs.forEach((doc) => {\r\n        yourCategories.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      setCategories(yourCategories);\r\n    }\r\n    getCategories();\r\n  }, []);\r\n  useEffect(() => {\r\n    setImageURL(thumbnailImageURL);\r\n  }, [thumbnailImageURL, setImageURL]);\r\n\r\n  async function deleteThumbnail() {}\r\n  const handleUpdatePost = async () => {\r\n    if (!isValid) return;\r\n    try {\r\n      const docRef = doc(db, \"posts\", postId);\r\n      await updateDoc(docRef, {\r\n        content,\r\n      });\r\n      toast.success(\"Post updated successfully\", {\r\n        autoClose: 1500,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      return err;\r\n    }\r\n  };\r\n  async function deleteAvatar() {\r\n    const docRef = doc(db, \"posts\", postId);\r\n    await updateDoc(docRef, {\r\n      imageURL: \"\",\r\n    });\r\n  }\r\n  const handleSelectOption = async (item) => {\r\n    const docRef = doc(db, \"categories\", item.id);\r\n    const docData = await getDoc(docRef);\r\n    setValue(\"category\", {\r\n      id: docData.id,\r\n      ...docData.data(),\r\n    });\r\n    // setValue(\"categoryId\", item.id);\r\n    setSelectCategory(item);\r\n  };\r\n  const modules = useMemo(\r\n    () => ({\r\n      toolbar: [\r\n        [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n        [\"blockquote\"],\r\n        [\r\n          { align: \"\" },\r\n          { align: \"center\" },\r\n          { align: \"right\" },\r\n          { align: \"justify\" },\r\n        ],\r\n        [{ header: 1 }, { header: 2 }], // custom button values\r\n        [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n        [{ header: [1, 2, 3, 4, false] }],\r\n        [\"clean\"],\r\n        [(\"link\", \"image\")],\r\n      ],\r\n      imageUploader: {\r\n        upload: async (file) => {\r\n          const bodyFormData = new FormData();\r\n          bodyFormData.append(\"image\", file);\r\n          const response = await axios({\r\n            method: \"post\",\r\n            url: imgbbAPI,\r\n            data: bodyFormData,\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          });\r\n          return response.data.data.url;\r\n        },\r\n      },\r\n    }),\r\n    []\r\n  );\r\n  if (!postId) return null;\r\n  return (\r\n    <>\r\n      <DashboardHeading\r\n        title=\"Update your post\"\r\n        desc=\"Update post's contents\"\r\n      ></DashboardHeading>\r\n      <form\r\n        className=\"mt-10 form-layout\"\r\n        onSubmit={handleSubmit(handleUpdatePost)}\r\n      >\r\n        <div className=\"grid grid-cols-2 mb-10 gap-x-10\">\r\n          <Field>\r\n            <Label required={true} htmlFor=\"title\">\r\n              Title\r\n            </Label>\r\n            <Input\r\n              control={control}\r\n              placeholder=\"Enter your title\"\r\n              name=\"title\"\r\n            ></Input>\r\n          </Field>\r\n          <Field>\r\n            <Label htmlFor=\"slug\">Slug</Label>\r\n            <Input\r\n              control={control}\r\n              placeholder=\"Enter your slug\"\r\n              name=\"slug\"\r\n            ></Input>\r\n          </Field>\r\n          <Field>\r\n            <Label htmlFor=\"author\">Author</Label>\r\n            <Input\r\n              control={control}\r\n              name=\"author\"\r\n              placeholder=\"Who's the author\"\r\n            ></Input>\r\n          </Field>\r\n          <Field>\r\n            <Label required={true} htmlFor=\"category\">\r\n              Category\r\n            </Label>\r\n            <Dropdown>\r\n              <Dropdown.Select></Dropdown.Select>\r\n              <Dropdown.List>\r\n                {categories.length > 0 &&\r\n                  categories.map((item) => (\r\n                    <Dropdown.Option\r\n                      onClick={() => handleSelectOption(item)}\r\n                      key={item.id}\r\n                    >\r\n                      {item.name}\r\n                    </Dropdown.Option>\r\n                  ))}\r\n              </Dropdown.List>\r\n            </Dropdown>\r\n            {selectCategory?.name && (\r\n              <span className=\"inline-block p-4 text-sm font-semibold text-white rounded-lg bg-primary\">\r\n                {selectCategory?.name}\r\n              </span>\r\n            )}\r\n          </Field>\r\n        </div>\r\n        <div className=\"mb-10 entry-content\">\r\n          <Field>\r\n            <Label required={true}>Edit your post's content:</Label>\r\n            <div className=\"w-full\">\r\n              <ReactQuill\r\n                modules={modules}\r\n                theme=\"snow\"\r\n                value={content}\r\n                onChange={setContent}\r\n              />\r\n            </div>\r\n          </Field>\r\n        </div>\r\n        <div className=\"w-full h-full mb-10\">\r\n          <Field>\r\n            <Label required={true} htmlFor=\"image\">\r\n              Your thumbnail\r\n            </Label>\r\n            <ImageUpload\r\n              name=\"image\"\r\n              imageURL={imageURL}\r\n              progress={progress}\r\n              minHeight=\"600px\"\r\n              onChange={handleSelectImage}\r\n              handleRemoveImage={handleRemoveImage}\r\n            ></ImageUpload>\r\n          </Field>\r\n        </div>\r\n        <div className=\"grid grid-cols-2 mb-10 gap-x-10\">\r\n          <Field>\r\n            <Label required={true} htmlFor=\"status\">\r\n              Status\r\n            </Label>\r\n            <FieldCheckbox>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={watchStatus === postStatus.APPROVED}\r\n                value={postStatus.APPROVED}\r\n              >\r\n                Approved\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={watchStatus === postStatus.PENDING}\r\n                value={postStatus.PENDING}\r\n              >\r\n                Pending\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={watchStatus === postStatus.REJECTED}\r\n                value={postStatus.REJECTED}\r\n              >\r\n                Reject\r\n              </Radio>\r\n            </FieldCheckbox>\r\n          </Field>\r\n\r\n          <Field>\r\n            <Label htmlFor=\"popular\">Popular post</Label>\r\n            <Toggle\r\n              name=\"popular\"\r\n              on={watchPopular === true}\r\n              onClick={() => setValue(\"popular\", !watchPopular)}\r\n            ></Toggle>\r\n          </Field>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          className=\"mx-auto\"\r\n          disabled={isSubmitting}\r\n          isLoading={isSubmitting}\r\n        >\r\n          Update your post\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostUpdate;\r\n"],"names":["imgbbAPI","DropdownContext","createContext","DropdownProvider","props","useState","show","setShow","value","handleToggleDropdown","Provider","children","useDropdown","context","useContext","Error","className","onClick","placeholder","onChange","type","Icon","Dropdown","Option","Search","Select","List","checked","control","name","field","useController","defaultValue","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","on","rest","id","useFirebaseImage","setValue","getValues","imageName","progress","setProgress","imageURL","setImageURL","handleUploadImage","file","includes","toast","autoClose","pauseOnHover","console","log","storage","getStorage","storageRef","ref","uploadTask","uploadBytesResumable","snapshot","progressPercent","bytesTransferred","totalBytes","state","error","code","hideProgressBar","getDownloadURL","then","downloadURL","handleSelectImage","e","target","files","handleResetUploadAfterSubmit","handleRemoveImage","imageRef","deleteObject","catch","handleRemoveAvatar","updateProfile","auth","photoURL","Quill","ImageUploader","useSearchParams","postId","get","categories","setCategories","selectCategory","setSelectCategory","content","setContent","useForm","mode","handleSubmit","watch","reset","formState","isSubmitting","isValid","watchStatus","errors","Number","watchPopular","thumbnailImageURL","thumbnailImageName","useEffect","docRef","doc","db","getDoc","docSnapshot","data","category","getPost","colRef","collection","q","query","where","getDocs","docs","yourCategories","forEach","push","getCategories","handleUpdatePost","updateDoc","handleSelectOption","item","docData","modules","useMemo","toolbar","align","header","list","imageUploader","upload","bodyFormData","FormData","append","axios","method","url","headers","response","title","desc","onSubmit","required","htmlFor","I","length","map","theme","minHeight","postStatus","disabled","isLoading"],"sourceRoot":""}